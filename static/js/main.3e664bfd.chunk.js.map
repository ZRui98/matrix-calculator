{"version":3,"sources":["objects/Matrix.js","helpers/operations.js","helpers/customPropTypes.js","components/controls/IncrementalControls.js","components/controls/MultipleMatrixControls.js","components/controls/SingleMatrixControls.js","components/controls/DependantMatrixControls.js","components/controls/OperationControls.js","components/controls/MainControls.js","components/matrix/MatrixCell.js","components/matrix/MatrixDisplay.js","helpers/matrixFunctions.js","components/App.js","serviceWorker.js","index.js"],"names":["Matrix","data","properties","Object","classCallCheck","this","rows","length","columns","invalid","id","parseInt","UUIDGen","type","Operations","PropTypes","shape","arrayOf","string","isRequired","number","bool","freeze","REDUCE","ADD","MULTIPLY","TRANSPOSE","incrementalControls","_ref","changeValue","value","label","react_default","a","createElement","className","onClick","onChange","event","target","AdditionControls","changeRows","_this$props","_this","props","matrices","forEach","matrix","changeColumns","_this$props2","_this2","_matrices$","IncrementalControls","Component","ReduceControls","matrixID","MultiplicationControls","possibleConstructorReturn","getPrototypeOf","call","changeDependantDimension","find","operations","changeOperation","options","keys","map","x","key","htmlFor","mainControls","operation","matrixControls","SingleMatrixControls","MultipleMatrixControls","DependantMatrixControls","OperationControls","MatrixCell","validate","reformattedValue","replace","match","changeCell","endsWith","setState","state","readOnly","style","cellValue","disabled","defaultProps","matrixDisplay","width","concat","messages","push","display","row","i","uniqueRowID","rowCells","cell","j","uniqueCellID","matrix_MatrixCell","swapRows","firstRowIndex","secondRowIndex","matrixCpy","slice","tempRow","val","multiplyRow","multiplier","mul","subtractRow","subtractingRow","targetRow","arguments","undefined","multiple","index","sub","helperFunctions","getFractionData","Fraction","getStringData","toFraction","bringToREF","matrixCopy","currentRow","currentColumn","pivotLocation","y","findPivotLocation","startingColumn","startingRow","mat","valueOf","reduceBelowPivot","pivot","s","d","n","bringToRREF","reduceAbovePivot","findIndex","add","firstMatrix","secondMatrix","addingRow","addRow","transpose","zip","apply","toConsumableArray","multiply","firstMatrixCopy","cols","result","col","row2","reduce","acc","val2","App","getResult","debounce","_this$state","_len","matrixIDs","Array","_key","hasInvalids","findMatrix","fractionDatas","fractionData","m","changeMatrix","MatrixHelpers","e","handleMatrixData","newMatrixData","resultMatrixIndex","reducedMatrix","addedMatrixData","multipliedMatrixData","newMatrix","oldID","addMatrix","findMatrixIndex","removeResultMatrix","pop","createMatrixData","fill","newColumns","oldColumns","matrixData","deltaColumns","newRows","oldRows","deltaRows","changeAllRows","filter","ID","changeAllColumns","matrixIndex","Error","setCellInvalid","newValue","column","toString","filtered","_this3","_this$state2","matrixDisplays","MatrixDisplay","resultMatrix","resultDisplay","MainControls","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e664bfd.chunk.js","sourcesContent":["import UUIDGen from 'uuid/v1';\n\nclass Matrix {\n  constructor(data, properties) {\n    this.data = data;\n    this.rows = data ? data.length : 0;\n    this.columns = data && data[0] ? data[0].length : 0;\n    this.invalid = false;\n    this.id = parseInt(UUIDGen(), 16);\n    this.type = properties.type;\n  }\n\n  getProperties() {\n    return {\n      type: this.type,\n    };\n  }\n}\n\nexport default Matrix;\n","const Operations = Object.freeze({\n  REDUCE: 'Reduce',\n  ADD: 'Add',\n  MULTIPLY: 'Multiply',\n  TRANSPOSE: 'Transpose',\n});\n\nexport default Operations;\n","import PropTypes from 'prop-types';\n\nconst CustomPropTypes = {\n  Matrix: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    invalid: PropTypes.bool.isRequired,\n    type: PropTypes.string.isRequired,\n  }),\n};\n\nexport default CustomPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst incrementalControls = ({ changeValue, value, label }) => (\n  <div className=\"dimensionWrapper\">\n    <div className=\"dimensionLabel\">\n      {label}\n      :\n    </div>\n    <div className=\"dimensionControls\">\n      <input type=\"button\" onClick={() => changeValue(value - 1)} value=\"-1\" />\n      <input\n        className=\"dimensionInput\"\n        type=\"string\"\n        value={value}\n        onChange={event => changeValue(event.target.value)}\n      />\n      <input type=\"button\" onClick={() => changeValue(value + 1)} value=\"+1\" />\n    </div>\n  </div>\n);\n\nincrementalControls.propTypes = {\n  changeValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default incrementalControls;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomPropTypes from '../../helpers/customPropTypes';\nimport IncrementalControls from './IncrementalControls';\n\nclass AdditionControls extends Component {\n  changeRows = (value) => {\n    const { changeRows, matrices } = this.props;\n    matrices.forEach((matrix) => {\n      changeRows(value, matrix.id);\n    });\n  }\n\n  changeColumns = (value) => {\n    const { changeColumns, matrices } = this.props;\n    matrices.forEach((matrix) => {\n      changeColumns(value, matrix.id);\n    });\n  }\n\n  render() {\n    const { matrices } = this.props;\n    const { rows, columns } = matrices[0];\n    return (\n      <div>\n        <IncrementalControls\n          label=\"Rows\"\n          value={rows}\n          changeValue={value => this.changeRows(value)}\n        />\n        <IncrementalControls\n          label=\"Columns\"\n          value={columns}\n          changeValue={value => this.changeColumns(value)}\n        />\n      </div>\n    );\n  }\n}\n\nAdditionControls.propTypes = {\n  matrices: PropTypes.arrayOf(CustomPropTypes.Matrix).isRequired,\n  changeRows: PropTypes.func.isRequired,\n  changeColumns: PropTypes.func.isRequired,\n};\n\nexport default AdditionControls;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomPropTypes from '../../helpers/customPropTypes';\nimport IncrementalControls from './IncrementalControls';\n\nclass ReduceControls extends Component {\n  changeRows = (value, matrixID) => {\n    const { changeRows } = this.props;\n    changeRows(value, matrixID);\n  }\n\n  changeColumns = (value, matrixID) => {\n    const { changeColumns } = this.props;\n    changeColumns(value, matrixID);\n  }\n\n  render() {\n    const { matrix } = this.props;\n    const { rows, columns, id: matrixID } = matrix;\n    return (\n      <div>\n        <IncrementalControls\n          label=\"Rows\"\n          value={rows}\n          changeValue={value => this.changeRows(value, matrixID)}\n        />\n        <IncrementalControls\n          label=\"Columns\"\n          value={columns}\n          changeValue={value => this.changeColumns(value, matrixID)}\n        />\n      </div>\n    );\n  }\n}\n\nReduceControls.propTypes = {\n  matrix: CustomPropTypes.Matrix.isRequired,\n  changeRows: PropTypes.func.isRequired,\n  changeColumns: PropTypes.func.isRequired,\n};\n\nexport default ReduceControls;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomPropTypes from '../../helpers/customPropTypes';\nimport IncrementalControls from './IncrementalControls';\n\nclass MultiplicationControls extends Component {\n  constructor(props) {\n    super(props);\n\n    const { matrices } = props;\n    this.matrix = matrices.find(matrix => matrix.type === 'input');\n  }\n\n  changeRows = (value, matrixID) => {\n    const { changeRows } = this.props;\n    changeRows(value, matrixID);\n  }\n\n\n  changeColumns = (value, matrixID) => {\n    const { changeColumns } = this.props;\n    changeColumns(value, matrixID);\n  }\n\n  changeDependantDimension = (value) => {\n    const { matrices } = this.props;\n    this.changeColumns(value, matrices[0].id);\n    this.changeRows(value, matrices[1].id);\n  }\n\n  render() {\n    const { matrices } = this.props;\n    const { rows, columns } = matrices[0];\n    return (\n      <div>\n        <IncrementalControls\n          label=\"Rows\"\n          value={rows}\n          changeValue={value => this.changeRows(value, matrices[0].id)}\n        />\n        <IncrementalControls\n          label=\"Dependant\"\n          value={columns}\n          changeValue={value => this.changeDependantDimension(value)}\n        />\n        <IncrementalControls\n          label=\"Columns\"\n          value={matrices[1].columns}\n          changeValue={value => this.changeColumns(value, matrices[1].id)}\n        />\n      </div>\n    );\n  }\n}\n\nMultiplicationControls.propTypes = {\n  matrices: PropTypes.arrayOf(CustomPropTypes.Matrix).isRequired,\n  changeRows: PropTypes.func.isRequired,\n  changeColumns: PropTypes.func.isRequired,\n};\n\nexport default MultiplicationControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Operations from '../../helpers/operations';\n\nconst operations = ({ changeOperation }) => {\n  const options = Object.keys(Operations).map(\n    x => <option key={x} value={Operations[x]}>{Operations[x]}</option>,\n  );\n  return (\n    <label htmlFor=\"operations\">\n      Operation:\n      <select id=\"operations\" onChange={event => changeOperation(event.target.value)}>{options}</select>\n    </label>\n  );\n};\n\noperations.propTypes = {\n  changeOperation: PropTypes.func.isRequired,\n};\n\nexport default operations;\n","import '../../css/Controls.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CustomPropTypes from '../../helpers/customPropTypes';\nimport Operations from '../../helpers/operations';\nimport MultipleMatrixControls from './MultipleMatrixControls';\nimport SingleMatrixControls from './SingleMatrixControls';\nimport DependantMatrixControls from './DependantMatrixControls';\nimport OperationControls from './OperationControls';\n\nconst mainControls = ({\n  operation,\n  changeOperation,\n  changeRows,\n  changeColumns,\n  matrices,\n}) => {\n  let matrixControls = '';\n  if (operation === Operations.REDUCE || operation === Operations.TRANSPOSE) {\n    matrixControls = (\n      <SingleMatrixControls\n        changeRows={changeRows}\n        changeColumns={changeColumns}\n        matrix={matrices.find(matrix => matrix.type === 'input')}\n      />\n    );\n  } else if (operation === Operations.ADD) {\n    matrixControls = (\n      <MultipleMatrixControls\n        changeRows={changeRows}\n        changeColumns={changeColumns}\n        matrices={matrices}\n      />\n    );\n  } else if (operation === Operations.MULTIPLY) {\n    matrixControls = (\n      <DependantMatrixControls\n        changeRows={changeRows}\n        changeColumns={changeColumns}\n        matrices={matrices}\n      />\n    );\n  }\n  return (\n    <div className=\"controls\">\n      <OperationControls changeOperation={changeOperation} />\n      {matrixControls}\n    </div>\n  );\n};\n\nmainControls.propTypes = {\n  operation: PropTypes.string.isRequired,\n  changeRows: PropTypes.func.isRequired,\n  changeColumns: PropTypes.func.isRequired,\n  changeOperation: PropTypes.func.isRequired,\n  matrices: PropTypes.arrayOf(CustomPropTypes.Matrix).isRequired,\n};\n\nexport default mainControls;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MatrixCell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid: false,\n    };\n  }\n\n  validate = (event) => {\n    let reformattedValue = event.target.value;\n    if (reformattedValue === '') {\n      reformattedValue = '0';\n    }\n    const fractionRegex = /^-?[0-9]*(\\/)?(-?([1-9][0-9]*))?$|^-$/g;\n    // remove leading zeroes except on decimals\n    reformattedValue = reformattedValue.replace(/^(0+)?(?=(0\\.|[0-9])|-)/, '');\n    if (!reformattedValue.match(fractionRegex)) {\n      return;\n    }\n    const { changeCell } = this.props;\n    const invalid = reformattedValue.endsWith('/');\n    this.setState({ invalid });\n    changeCell(reformattedValue);\n  }\n\n  render() {\n    const { readOnly, style, cellValue } = this.props;\n    let { className } = this.props;\n    const { invalid } = this.state;\n\n    if (invalid) {\n      className += ' invalid';\n    }\n    const input = (\n      <input\n        disabled={readOnly}\n        className={className}\n        style={style}\n        type=\"text\"\n        value={cellValue}\n        onChange={readOnly ? null : this.validate}\n      />\n    );\n    return input;\n  }\n}\n\nMatrixCell.propTypes = {\n  readOnly: PropTypes.bool,\n  className: PropTypes.string.isRequired,\n  changeCell: PropTypes.func.isRequired,\n  cellValue: PropTypes.string.isRequired,\n};\n\nMatrixCell.defaultProps = {\n  readOnly: true,\n};\n\nexport default MatrixCell;\n","import React from 'react';\nimport '../../css/Matrix.css';\nimport PropTypes from 'prop-types';\nimport CustomPropTypes from '../../helpers/customPropTypes';\nimport MatrixCell from './MatrixCell';\n\nconst matrixDisplay = ({\n  matrix,\n  changeCell,\n}) => {\n  const style = {\n    width: `${60 / matrix.columns}%`,\n  };\n\n  const messages = [];\n  const { invalid } = matrix;\n  if (invalid) {\n    messages.push(\n      <div key=\"invalid\">Matrix is invalid!</div>,\n    );\n  }\n\n  const display = matrix.data.map((row, i) => {\n    const uniqueRowID = i * matrix.id;\n    const rowCells = row.map((cell, j) => {\n      const uniqueCellID = i * matrix.columns + j * matrix.id;\n      const readOnly = matrix.type === 'result';\n      return (\n        <MatrixCell\n          readOnly={readOnly}\n          className=\"cell\"\n          style={style}\n          type=\"text\"\n          cellValue={cell}\n          changeCell={(value) => { changeCell(value, i, j, matrix.id); }}\n          key={uniqueCellID}\n        />\n      );\n    });\n    return (\n      <div className=\"row\" key={uniqueRowID}>\n        {rowCells}\n      </div>\n    );\n  });\n  return (\n    <div className=\"matrixDisplay\">\n      <div className=\"messages\">\n        {messages}\n      </div>\n      {display}\n    </div>\n  );\n};\n\nmatrixDisplay.propTypes = {\n  matrix: CustomPropTypes.Matrix.isRequired,\n  changeCell: PropTypes.func.isRequired,\n};\n\n\nexport default matrixDisplay;\n","import Fraction from 'fraction.js';\nimport zip from 'lodash/zip';\n\n// Elementary Row Operations\nconst swapRows = (firstRowIndex, secondRowIndex, matrix) => {\n  let matrixCpy = matrix.map(row => row.slice());\n  const tempRow = matrix[firstRowIndex].slice(0);\n  matrixCpy[firstRowIndex] = matrix[secondRowIndex].slice(0);\n  matrixCpy[secondRowIndex] = tempRow;\n  matrixCpy = matrixCpy.map(row => row.map(val => val));\n  return matrixCpy;\n};\n\nconst multiplyRow = (row, multiplier) => (\n  row.map(val => val.mul(multiplier))\n);\n\nconst subtractRow = (subtractingRow, targetRow, multiplier = 1) => {\n  const multiple = multiplyRow(subtractingRow, multiplier);\n  return targetRow.map((val, index) => val.sub(multiple[index]));\n};\n\nconst addRow = (addingRow, targetRow, multiplier = 1) => {\n  const multiple = multiplyRow(addingRow, multiplier);\n  return targetRow.map((val, index) => val.add(multiple[index]));\n};\n\nconst dotProductRow = (row1, row2) => (\n  row1.reduce((acc, val, i) => {\n    const val2 = row2[i];\n    return acc + val.mul([val2.s * val2.n, val2.d]);\n  }, 0)\n);\n\nconst helperFunctions = {\n  getFractionData: matrix => (\n    matrix.map(row => row.map(val => new Fraction(val)))\n  ),\n\n  getStringData: matrix => (\n    matrix.map(row => row.map(val => val.toFraction(false)))\n  ),\n\n  // bring a matrix to REF.\n  bringToREF: (matrix) => {\n    let matrixCopy = matrix.map(row => row.slice());\n    let currentRow = 0;\n    let currentColumn = 0;\n    let pivotLocation = { x: currentRow, y: currentColumn };\n    /**\n     * finds a pivot location by first checking below current column, then checking next\n     * column to the right.\n     */\n    const findPivotLocation = (startingColumn, startingRow, mat) => {\n      for (let x = startingColumn; x < mat[0].length; x += 1) {\n        for (let y = startingRow; y < mat.length; y += 1) {\n          if (mat[y][x].valueOf() !== 0) {\n            return { x, y };\n          }\n        }\n      }\n      return null;\n    };\n    // make all entries below pivot zero by performing ERO's\n    // ROW = ROW - PIVOT * (multiplier s.t ROW in PIVOT column cancels out).\n    const reduceBelowPivot = (row, i) => {\n      const index = currentRow + i + 1;\n      const multiplier = matrixCopy[index][currentColumn].valueOf();\n      if (multiplier === 0) {\n        return;\n      }\n      matrixCopy[index] = subtractRow(matrixCopy[currentRow], matrixCopy[index], multiplier);\n    };\n\n    // go through all diagonal positions for possible pivot locations until end is reached\n    while (currentRow < matrixCopy.length) {\n      pivotLocation = findPivotLocation(currentColumn, currentRow, matrixCopy);\n      // exit on no pivot found, as matrix is in row echelon form\n      if (!pivotLocation) {\n        break;\n      }\n      // set furthest left pivot to highest row possible, and divide row so pivot is 1\n      matrixCopy = swapRows(currentRow, pivotLocation.y, matrixCopy);\n      currentColumn = pivotLocation.x;\n      const pivot = matrixCopy[currentRow][pivotLocation.x];\n      const multiplier = [pivot.s * pivot.d, pivot.n];\n      matrixCopy[currentRow] = multiplyRow(matrixCopy[currentRow], multiplier);\n\n      // reduce all values below pivot in column so that they all become zero\n      matrixCopy.slice(currentRow + 1).forEach(reduceBelowPivot);\n\n      currentRow += 1;\n      currentColumn += 1;\n    }\n    return matrixCopy;\n  },\n\n  // convert a REF matrix to RREF\n  bringToRREF: (matrix) => {\n    if (matrix === undefined || matrix === null) {\n      return null;\n    }\n    let matrixCopy = matrix.map(row => row.slice());\n    matrixCopy = helperFunctions.bringToREF(matrix);\n    let currentRow = matrix.length - 1;\n\n    const hasPivot = row => row.findIndex(cell => cell.valueOf() === 1);\n    const reduceAbovePivot = pivotLocation => (\n      matrixCopy.slice(0, currentRow).forEach((row, index) => {\n        if (row[pivotLocation].valueOf() !== 0) {\n          const multiplier = matrixCopy[index][pivotLocation].valueOf();\n          matrixCopy[index] = subtractRow(matrixCopy[currentRow], matrixCopy[index], multiplier);\n        }\n      })\n    );\n\n    while (currentRow > 0) {\n      const pivotLocation = hasPivot(matrixCopy[currentRow]);\n      if (pivotLocation !== -1) {\n        reduceAbovePivot(pivotLocation);\n      }\n      currentRow -= 1;\n    }\n    return matrixCopy;\n  },\n  add: (firstMatrix, secondMatrix) => (\n    firstMatrix.map((row, i) => addRow(row, secondMatrix[i]))\n  ),\n  transpose: matrix => zip(...matrix),\n  multiply: (firstMatrix, secondMatrix) => {\n    const firstMatrixCopy = firstMatrix.map(row => row.slice());\n    const cols = helperFunctions.transpose(secondMatrix);\n    const result = firstMatrixCopy.map(row => cols.map(col => dotProductRow(row, col)));\n    return helperFunctions.getFractionData(result);\n  },\n};\n\nexport default helperFunctions;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport debounce from 'lodash/debounce';\nimport Fraction from 'fraction.js';\nimport Matrix from '../objects/Matrix';\nimport Controls from './controls/MainControls';\nimport MatrixDisplay from './matrix/MatrixDisplay';\nimport MatrixHelpers from '../helpers/matrixFunctions';\nimport Operations from '../helpers/operations';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      operation: Operations.REDUCE,\n      matrices: [],\n    };\n    const { matrices } = this.state;\n    const data = [\n      ['0', '0', '0'],\n      ['0', '0', '0'],\n      ['0', '0', '0'],\n    ];\n    matrices.push(new Matrix(data, {\n      type: 'input',\n    }));\n  }\n\n  getFractionData = matrix => (\n    matrix.map(row => row.map(val => new Fraction(val)))\n  )\n\n  getResult = debounce((...matrixIDs) => {\n    const { operation, matrices } = this.state;\n    const matrix = this.findMatrix(matrixIDs[0]);\n    const handleMatrixData = (m) => {\n      const mat = m;\n      try {\n        mat.invalid = false;\n        this.changeMatrix(mat, mat.id);\n        return MatrixHelpers.getFractionData(mat.data);\n      } catch (e) {\n        mat.invalid = true;\n        this.changeMatrix(mat, mat.id);\n        return null;\n      }\n    };\n    const fractionDatas = [];\n    let hasInvalids;\n    matrixIDs.forEach((mat) => {\n      const fractionData = handleMatrixData(this.findMatrix(mat));\n      if (!fractionData) {\n        hasInvalids = true;\n      }\n      fractionDatas.push(fractionData);\n    });\n    if (hasInvalids) {\n      return;\n    }\n    const resultMatrixIndex = matrices.findIndex(mat => mat.type === 'result');\n    let newMatrixData;\n\n    if (operation === Operations.REDUCE) {\n      this.changeMatrix(matrix, matrix.id);\n      const reducedMatrix = MatrixHelpers.bringToRREF(fractionDatas[0]);\n      newMatrixData = MatrixHelpers.getStringData(reducedMatrix);\n    } else if (operation === Operations.ADD) {\n      const addedMatrixData = MatrixHelpers.add(fractionDatas[0], fractionDatas[1]);\n      newMatrixData = MatrixHelpers.getStringData(addedMatrixData);\n    } else if (operation === Operations.MULTIPLY) {\n      const multipliedMatrixData = MatrixHelpers.multiply(fractionDatas[0], fractionDatas[1]);\n      newMatrixData = MatrixHelpers.getStringData(multipliedMatrixData);\n    } else if (operation === Operations.TRANSPOSE) {\n      const addedMatrixData = MatrixHelpers.transpose(fractionDatas[0]);\n      newMatrixData = MatrixHelpers.getStringData(addedMatrixData);\n    }\n    const newMatrix = new Matrix(newMatrixData, { type: 'result' });\n    if (resultMatrixIndex === -1) {\n      this.addMatrix(newMatrix);\n      return;\n    }\n    const oldID = matrices[resultMatrixIndex].id;\n    this.changeMatrix(oldID, newMatrix);\n  }, 500);\n\n  findMatrix = (matrixID) => {\n    const { matrices } = this.state;\n    return matrices.find(matrix => matrix.id === matrixID);\n  };\n\n  findMatrixIndex = (matrixID) => {\n    const { matrices } = this.state;\n    return matrices.findIndex(matrix => matrix.id === matrixID);\n  };\n\n  removeResultMatrix = () => {\n    const { matrices } = this.state;\n    const index = matrices.findIndex(matrix => matrix.type === 'result');\n    if (index === -1) {\n      return;\n    }\n    matrices.pop(index);\n    this.setState({ matrices });\n  }\n\n  createMatrixData = (rows, columns) => Array(rows).fill().map(() => Array(columns).fill('0'));\n\n  changeColumns = (newColumns, matrixID) => {\n    const matrix = this.findMatrix(matrixID);\n    const { columns: oldColumns, data: matrixData } = matrix;\n    matrixData.forEach((row) => {\n      let deltaColumns = newColumns - oldColumns;\n      while (deltaColumns < 0) {\n        deltaColumns += 1;\n        row.pop();\n      }\n      while (deltaColumns > 0) {\n        deltaColumns -= 1;\n        row.push('0');\n      }\n    });\n    matrix.columns = parseInt(newColumns, 10) || 0;\n    matrix.data = matrixData;\n    this.changeMatrix(matrixID, matrix);\n    this.removeResultMatrix();\n  }\n\n  changeRows = (newRows, matrixID) => {\n    const matrix = this.findMatrix(matrixID);\n    const { rows: oldRows, columns, data: matrixData } = matrix;\n    let deltaRows = newRows - oldRows;\n\n    while (deltaRows < 0) {\n      deltaRows += 1;\n      matrixData.pop();\n    }\n    while (deltaRows > 0) {\n      deltaRows -= 1;\n      matrixData.push(new Array(parseInt(columns, 10)).fill('0'));\n    }\n    matrix.rows = parseInt(newRows, 10) || 0;\n    matrix.data = matrixData;\n    this.changeMatrix(matrixID, matrix);\n    this.removeResultMatrix();\n  }\n\n  changeAllRows = (newRows) => {\n    const { matrices } = this.state;\n    matrices.filter(matrix => matrix.type !== 'input').forEach(\n      matrix => this.changeRows(newRows, matrix.ID),\n    );\n  }\n\n  changeAllColumns = (newColumns) => {\n    const { matrices } = this.state;\n    matrices.filter(matrix => matrix.type !== 'input').forEach(\n      matrix => this.changeColumns(newColumns, matrix.ID),\n    );\n  }\n\n  changeMatrix = (matrixID, matrix) => {\n    const { matrices } = this.state;\n    const matrixIndex = this.findMatrixIndex(matrixID);\n    if (matrixIndex >= matrices.length) {\n      throw new Error('Invalid matrixIndex');\n    }\n    matrices[matrixIndex] = matrix;\n    this.setState({ matrices });\n  }\n\n  addMatrix = (matrix) => {\n    const { matrices } = this.state;\n    matrices.push(matrix);\n    this.setState({ matrices });\n  }\n\n  setCellInvalid = (matrixID, invalid) => {\n    const matrix = this.findMatrix(matrixID);\n    matrix.invalid = invalid;\n    this.changeMatrix(matrixID, matrix);\n  }\n\n  changeCell = (newValue, row, column, matrixID) => {\n    // regex for checking that number is vaid fraction, trails with a single '/', or is a single -\n    const matrix = this.findMatrix(matrixID);\n    matrix.data[row][column] = newValue.toString();\n    this.changeMatrix(matrixID, matrix);\n    const { operation } = this.state;\n    if (operation === Operations.REDUCE) {\n      this.getResult(matrixID);\n      return;\n    }\n    const { matrices } = this.state;\n    const filtered = matrices.filter(m => m.type === 'input').map(m => m.id);\n    this.getResult(...filtered);\n  }\n\n\n  changeOperation = (operation) => {\n    const matrices = [];\n    if (operation === Operations.REDUCE || operation === Operations.TRANSPOSE) {\n      matrices.push(new Matrix(this.createMatrixData(3, 3), {\n        type: 'input',\n      }));\n    } else if (operation === Operations.ADD || operation === Operations.MULTIPLY) {\n      matrices.push(new Matrix(this.createMatrixData(3, 3), {\n        type: 'input',\n      }));\n      matrices.push(new Matrix(this.createMatrixData(3, 3), {\n        type: 'input',\n      }));\n    }\n    this.setState({ operation, matrices });\n  }\n\n  render() {\n    const {\n      operation,\n      operations,\n      matrices,\n    } = this.state;\n    const matrixDisplays = matrices.filter(matrix => matrix.type !== 'result').map(matrix => (\n      <div className=\"matrix\" key={`matrix${matrix.id}`}>\n        <MatrixDisplay\n          key={`display${matrix.id}`}\n          matrix={matrix}\n          changeCell={this.changeCell}\n        />\n      </div>\n    ));\n    const resultMatrix = matrices.find(matrix => matrix.type === 'result');\n    const resultDisplay = resultMatrix && resultMatrix.data && resultMatrix.data.length > 0\n      && resultMatrix.data[0].length > 0 ? (\n        <div className=\"resultMatrix\">\n          <div>RESULT</div>\n          <MatrixDisplay\n            key={resultMatrix.id}\n            matrix={resultMatrix}\n            changeCell={this.changeCell}\n          />\n        </div>\n      ) : '';\n    return (\n      <div>\n        <Controls\n          matrices={matrices}\n          operation={operation}\n          operations={operations}\n          changeRows={this.changeRows}\n          changeColumns={this.changeColumns}\n          changeOperation={this.changeOperation}\n        />\n        <div className=\"matrices\">\n          {matrixDisplays}\n        </div>\n        {resultDisplay}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}